#!/bin/bash

# Define variables for container, user, and database names
container_name="{{ database_container_name }}"
database_user="{{ database_user }}"
database_name="{{ database_name }}"
postgres_root_user="{{ postgres_root_user }}"

# Create the database user if it doesn't exist
docker exec "$container_name" psql -U postgres -tc "SELECT 1 FROM pg_user WHERE usename = '$database_user'" | grep -q 1 || docker exec "$container_name" psql -U postgres -c "CREATE USER $database_user"

# Check if the database exists and create it if it doesn't
docker exec "$container_name" psql -U "$database_user" postgres -tc "SELECT 1 FROM pg_database WHERE datname = '$database_name'" | grep -q 1 || docker exec "$container_name" psql -U "$database_user" postgres -c "CREATE DATABASE $database_name"

#TODO: Password setting is missing
#TODO: GRANT CREATE ON SCHEMA public TO new_user; also missing

# Create the database user if it doesn't exist
docker exec "$container_name" psql -U $postgres_root_user -tc "SELECT 1 FROM pg_user WHERE usename = '$database_user'" | grep -q 1 || docker exec "$container_name" psql -U $postgres_root_user -c "CREATE USER $database_user"

# Check if the database exists and create it if it doesn't
docker exec "$container_name" psql -U "$postgres_root_user" postgres -tc "SELECT 1 FROM pg_database WHERE datname = '$database_name'" | grep -q 1 || docker exec "$container_name" psql -U "$postgres_root_user" postgres -c "CREATE DATABASE $database_name"

# Grant all permissions on the newly created database to database_user
docker exec "$container_name" psql -U "$postgres_root_user" postgres -c "GRANT ALL PRIVILEGES ON DATABASE '$database_name' TO '$database_user'"
